---
pagetitle: "The threefold path of multi-level modeling"
---

{{< include _titleslide.qmd >}}

## Today's <span class="alert">Theme</span> {.imgslide} 

<img src="/images/radon_entry.png">

How do hierarchical models make the most use of multi-level data

## Agenda

- Quick overview of prep for tuesday's *Destination* presentations 

- Housekeeping for postcards üìÆ presentations.

- Walking through the three approaches to multi-level modeling discussed in @gelman2006.
 
- Hierarchical model <span class="alert">hands-on</span>

## Destination Presentations

- Aim for 8-10m each including time for Q&A

- 2-3 slides, which should be primarily <span class="alert">visual</span> in nature 

- Pose specific questions for feedback from the class. 

- Send your slides to me before class so I can load them up at the beginning of class.

## Assigning readings for *Postcards* assignments

- <span class="alert">Before spring break</span>: Please send me <span class="alert">3</span> candidate readings you think could be good to assign for your class session. 

- <span class="alert">Next week:</span> I will circulate a sign-up for slots to run discussion during our *Postcards* class sessions.

- If you have a conflict that necessitates presenting on a specific day please let me ASAP so that I can block it out for you. 

## Let's <span class="alert">extend</span> the blood pressure model from Merlo et al. to include a <span class="alert">risk/protective</span> factor.

- Simulated study where we sample 1000 individuals ($i$) from 20 neighborhoods ($j$) and measure:

- $y_{ij}$ is <span class="alert">continuous</span> systolic blood pressure (SBP) for individual $i$ in location $j$.

- $x_i \in [0,1]$ is a binary exposure indicating whether the individual gets regular physical exercise.

- $\beta$ is an increase in $y_i$ associated with the exposure 

- $\alpha$ is <span class="alert">mean</span> SBP in the absence of exposure

## How can we deal with the fact that people are <span class="alert">clustered</span> within locations? 

<iframe src="https://giphy.com/embed/nz6qNPDA0dpsxbY0rl" width="480" height="304" frameBorder="0" class="giphy-embed" allowFullScreen align="center"></iframe>

You have <span class="alert">three choices</span>: Which üö™ will you choose?

## Door üö™ #1: Ignore clustering and fit a normal GLM

- *Pool* data across all units, i.e. ignore clustering.

- i.e. fit model $y_{ij} = \alpha + \beta x_i + \epsilon_i$

- Is this typically a good idea?

## <span style="color:red">NO!</span> {.imgslide}

<img src="/images/regression_dragon_1.jpg">

Complete pooling ignores potential sources of *observed* and *unobserved* unit-level <span class="alert">confounding</span>.


## <span class="alert">Full pooling</span> of clustered data violates assumption of independent errors

A <span class="alert"> fully pooled</span> model:

$$
y_i = \alpha + \beta x + \epsilon_i
$$

:::{.fragment}
Assumes $y_i$ is a combination of systematic variation ($\alpha + \beta x$) and *uncorrelated* random noise ($\epsilon_i$) where:

$$
\text{i.i.d.} \epsilon \sim Normal(0, \sigma^2)
$$
:::
## Your <span class="alert">residuals</span> should look like this

```{r}
#| warning: false 
#| echo: true
#| code-fold: true 
#| fig.cap:  "Residuals for a model with un-clustered errors"
require(ggplot2)
set.seed(1299445)
df <- data.frame(x = rnorm(1000))
g <- ggplot(df, aes(x = x)) +
  geom_histogram(binwidth = 0.1, aes(y=..density..)) +
  stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +
  xlab("Distance from mean model prediction") +
  ylab("Density") + 
  theme_bw()
plot(g)
```

## Your <span class="alert">residuals</span> should look like this

```{r}
#| warning: false 
#| echo: true
#| code-fold: true 
#| fig.cap:  "Residuals for a model with un-clustered errors"
require(ggplot2)
g <- ggplot(df, aes(sample = x)) +
  stat_qq() +
  stat_qq_line()

plot(g)
```

## If you ignore <span class="alert">strong</span> üí™ clustering (ICC = 0.9)

```{r}
#| warning: false 
#| echo: true
#| code-fold: true 
#| fig-cap: "Clustered errors that are far from being normal" 
require(ggplot2)
icc <- 0.9
total_var <- 1
cluster_sigma <- sqrt(icc * total_var)
ind_sigma <- sqrt((1 - icc) * total_var)
ind_cluster <- 100
ncluster <- 10
cluster_ids <- sort(rep(1:ncluster, ind_cluster))
cluster_means <- rnorm(ncluster, sd = cluster_sigma)
ind_vals <- rnorm(n = length(cluster_ids), mean = cluster_means[cluster_ids], sd = ind_sigma)

df <- data.frame(x = ind_vals, cluster = cluster_ids)

g <- ggplot(df, aes(x = x, cluster = cluster_ids)) +
  geom_histogram(binwidth = 0.05, aes(y=..density..)) +
  xlab("Distance from mean") +
  ylab("Density") +
  stat_function(fun = dnorm, args = list(mean = 0, sd = sqrt(total_var))) +
  theme_bw()


plot(g)
```

## If you ignore <span class="alert">strong</span> üí™ clustering (ICC = 0.9)


```{r}
#| fig-cap: "Qqplot of residuals"
require(ggplot2)
g <- ggplot(df, aes(sample = x)) +
  stat_qq() +
  stat_qq_line() +
  xlab("Theoretical Quantiles") +
  ylab("Observed Quantiles")

plot(g)
```


## If you ignore <span class="alert">moderate</span> clustering (ICC = 0.5)

```{r, echo=FALSE, fig.cap="Moderately clustered errors"}
require(ggplot2)
icc <- 0.5
total_var <- 1
cluster_sigma <- sqrt(icc * total_var)
ind_sigma <- sqrt((1 - icc) * total_var)
ind_cluster <- 100
ncluster <- 10
#cluster_sigma <- 1
#ind_sigma <- 0.2

cluster_ids <- sort(rep(1:ncluster, ind_cluster))

cluster_means <- rnorm(ncluster, sd = cluster_sigma)
ind_vals <- rnorm(n = length(cluster_ids), mean = cluster_means[cluster_ids], sd = ind_sigma)

df <- data.frame(x = ind_vals, cluster = cluster_ids)

g <- ggplot(df, aes(x = x, cluster = cluster_ids)) +
  geom_histogram(binwidth = 0.05, aes(y = ..density..)) +
      stat_function(fun = dnorm, args = list(mean = 0, sd = sqrt(total_var))) + 
  xlab("Distance from mean") +
  ylab("Density") + 
  theme_bw()


plot(g)
```
## If you ignore <span class="alert">moderate</span> clustering (ICC = 0.5)


```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.cap="Example of residuals for model with clustered errors"}
require(ggplot2)
g <- ggplot(df, aes(sample = x)) +
  stat_qq() +
  stat_qq_line() +
  xlab("Theoretical Quantiles") +
  ylab("Observed Quantiles")

plot(g)
```


## If you ignore <span class="alert">weaker</span> clustering (ICC = 0.25)

```{r, echo=FALSE, fig.cap="Clustered errors"}
require(ggplot2)
icc <- 0.25
total_var <- 1
cluster_sigma <- sqrt(icc * total_var)
ind_sigma <- sqrt((1 - icc) * total_var)
ind_cluster <- 100
ncluster <- 10
#cluster_sigma <- 1
#ind_sigma <- 0.2

cluster_ids <- sort(rep(1:ncluster, ind_cluster))

cluster_means <- rnorm(ncluster, sd = cluster_sigma)
ind_vals <- rnorm(n = length(cluster_ids), mean = cluster_means[cluster_ids], sd = ind_sigma)

df <- data.frame(x = ind_vals, cluster = cluster_ids)

g <- ggplot(df, aes(x = x, cluster = cluster_ids)) +
  geom_histogram(binwidth = 0.05, aes(y = ..density..)) +
      stat_function(fun = dnorm, args = list(mean = 0, sd = sqrt(total_var))) + 
  xlab("Distance from mean") +
  ylab("N") + 
  theme_bw()


plot(g)
```

## If you ignore <span class="alert">weaker</span> clustering (ICC = 0.25)

```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.cap="Example of residuals for model with clustered errors"}
require(ggplot2)
g <- ggplot(df, aes(sample = x)) +
  stat_qq() +
  stat_qq_line() +
  xlab("Theoretical Quantiles") +
  ylab("Observed Quantiles")

plot(g)
```


## Door üö™ #2: Fit a <span class="alert">different model</span> to each cluster

- <span class="alert">Unpooled approach:</span>Fit a separate model to each unit ($j$), assuming outcomes in each unit are independent:

- Model looks like: $y_{ij} = \alpha_j + \beta_j x_i + \epsilon_{ij}$

- Where: $\epsilon_{ij} \sim N(0, \sigma_{j}^2)$

## <span class="danger">More danger!</span>

<img src="/images/regression_dino.jpg">

Totally unpooled models run the risk of <span class="alert">overfitting</span> the data, particularly in small samples.

## Specific dangers of unpooled models

- Some places may have few observations, making *unpooled* models impractical

- We may want to allow the effect of an exposure to be consistent across location. 

- Will have nothing to say about data from a new location

## How would our <span class="alert">ideal</span> model split the difference between fully pooled and totally unpooled?

- Encode the <span class="alert">assumption</span> that places are similar unless data tell us otherwise.

- Be <span class="alert">flexible</span> enough to reflect information in new data without <span class="alert">overfitting</span>.

- Give answers equivalent to the <span class="alert">fully pooled</span> and <span class="alert">unpooled</span> approaches if that is what the data actually suggest.

## Door üö™ #3: Partial Pooling üèä!

- Allow <span class="alert">effects</span> to vary across clusters, but constrain them to come from the same distribution:

- Model looks like: $y_{ij} = \alpha + \beta x_i + \epsilon_{i} + \epsilon_{j}$

- Where: $\epsilon_{i} \sim N(0, \sigma_{i}^2)$

- And: $\epsilon_{j} \sim N(0, \sigma_{j}^2)$

## What does partial pooling get us?

- This approach accommodates variation across units without assuming they have *no* similarity.

- Allows us to include covariates both about individuals and their spatial context.

- More likely to make accurate <span class="alert">out-of-sample</span> predictions than the fully-pooled or unpooled examples.


## Time to break some models!

![https://sph-umich.shinyapps.io/hierarchical_models/](../examples/hierarchical_hands_on.png)  

```{r}
library(countdown)
countdown(minutes = 25, warn_when = 300, seconds = 0, play_sound=FALSE)
```

## Imagine you're in the <span class="alert">radon system</span> business {.imgslide}

<img src="/images/jz_radon.jpg" style="width:25%">

My very own radon mitigation system!

## How could you use/extend the partial pooling model from the Gelman paper to:

In groups:

1. Sell more radon systems in Minnesota?

2. Reduce the burden of inequality in radon-associated health risks in Minnesota?

3. Branch out into other markets, like Michigan, where we have good measurements of soil uranium but don't have access to household-level radon measurements?

```{r}
library(countdown)
countdown(minutes = 5, warn_when = 60, seconds = 0, play_sound=FALSE)
```

## As the soil uranium ‚ò¢Ô∏è increases, so does baseline county-level radon {.imgslide}

<img src="/images/gelman_county_uranium.png" style="width:70%">

## Counties with lots of soil uranium seem like a good bet for business {.imgslide}

<img src="/images/radon_map.png">

## Partial pooling most benefits predictions for places with <span class="alert">less data</span> {.imgslide}

<img src="/images/gelman_basement_effect.png" style="width:70%">

Light dotted line = full pooling; Light solid line = no pooling; Dark line = partial pooling 

## Next Time {.imgslide}

<span class="alert">Destination</span> presentations

## References
