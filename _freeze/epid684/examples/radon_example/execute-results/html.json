{
  "hash": "127d167319247336fb07f1fc8868d616",
  "result": {
    "markdown": "---\nexecute:\n  cache: true\n---\n\n\n# Re-Creating the `radon` example\n\nFirst, we will load the relevant packages:\n\n::: {.cell hash='radon_example_cache/html/setup_fc971352c316a10ff2998b66adbaf4be'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(bayesplot)\nlibrary(rstanarm)\nlibrary(purrr)\nlibrary(tidybayes)\nlibrary(dplyr)\n```\n:::\n\n\n\n## Data Preparation\n\nFirst, lets take the raw `radon` dataset from the `rstanarm` package and make some minor modifications and additonal datasets that we'll use for the purposes of modeling and visualizing these data.\n\nFirst, since each row of `radon` dataset includes an observation of a single house, we need to work backwards to obtain the county-level soil uranium measure for each individual county. This is pretty straightforward to do using the `dplyr` package:\n\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-1_a093b62e9879a62beefe2cd35cafb36d'}\n\n```{.r .cell-code}\ncounty_uranium <- radon %>%\n  group_by(county) %>%\n  summarize(log_uranium = first(log_uranium)) \n```\n:::\n\n\nWe will also make a second dataset that we will use later on for the purposes of prediction. This contains 2 entries for each county, representing observations taken in the basement or on the first floor.\n\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-2_496328a15d8c8e719454053cb6fb4b1b'}\n\n```{.r .cell-code}\ncounty_uranium_tmp_1 <- county_uranium\ncounty_uranium_tmp_1$floor <- 0\ncounty_uranium_tmp_2 <- county_uranium\ncounty_uranium_tmp_2$floor <- 1\n\ncounty_dummy_df <- rbind(county_uranium_tmp_1, county_uranium_tmp_2)\n\n## In the original dataset, basements are coded as the 0th floor, so we are \n## reversing this so that adjusting for basement will give us the appropriate estimate\ncounty_dummy_df$basement <- 1-county_dummy_df$floor\n\n## Now, lets make a final prediction dataset that includes only basement observations\npooled_predict_df <- county_dummy_df %>%\n  filter(basement == 0)\n\n## Lets also modify the `radon` dataset to have a basement variable\nradon$basement <- 1 - radon$floor\n```\n:::\n\n\n## ðŸšª Door 1: Full pooling!\n\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-3_02c3ae8313be6e2357ba708e13769d18'}\n\n```{.r .cell-code}\nm1 <-lm(log_radon ~ basement, data = radon)\nsummary(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = log_radon ~ basement, data = radon)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3.07857 -0.52950  0.02388  0.53970  2.51502 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.77599    0.06388  12.148   <2e-16 ***\nbasement     0.58642    0.06996   8.382   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.7901 on 917 degrees of freedom\nMultiple R-squared:  0.07116,\tAdjusted R-squared:  0.07015 \nF-statistic: 70.25 on 1 and 917 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\nNow, we'll save the fully pooled predictions for each condition to our dataset:\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-4_3608314955e883b7894d7a21a0e087bb'}\n\n```{.r .cell-code}\ncounty_dummy_df$pooled_pred <- predict(m1, county_dummy_df)\n```\n:::\n\n## ðŸšª Door 2: No pooling\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-5_3a6b986c21ffa08b7de0e3de33e7f335'}\n\n```{.r .cell-code}\npred_data <- data.frame(basement = c(0, 1))\nno_pool_m <- lm(log_radon ~ basement + county, data = radon)\ncounty_dummy_df$no_pool_pred <- predict(no_pool_m, county_dummy_df)\n```\n:::\n\n\n\n\n## ðŸšª Door 3: Partial Pooling\n\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-6_e6624c3494f9449fdc76328b124242e6'}\n\n```{.r .cell-code}\nm2 <- stan_lmer(log_radon ~ basement + log_uranium + (1 | county), data = radon)\nposterior <- as.matrix(m2)\n\n## Gives posterior median for each prediction.\ncounty_dummy_df$partial_pred <- posterior_predict(m2, county_dummy_df) %>%\n  apply(2,median) \n```\n:::\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-7_358376967533231d38a6e15b997d6b9a'}\n\n```{.r .cell-code}\ng2 <- mcmc_areas(posterior, pars = c(\"basement\", \"log_uranium\"))\nplot(g2)\n```\n\n::: {.cell-output-display}\n![](radon_example_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Figure 1\n\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-8_bf6539ddb65e8ff446445d71973eb917'}\n\n```{.r .cell-code}\nfig_1_counties <- c(\"LACQUIPARLE\", \"AITKIN\", \"KOOCHICHING\", \"DOUGLAS\", \"CLAY\", \"STEARNS\", \"RAMSEY\", \"STLOUIS\")\n\ncounty_df_fig_1 <- county_dummy_df %>% \n  filter(county %in% fig_1_counties) %>%\n  mutate(county2 = factor(county, levels = fig_1_counties)) %>%\n  arrange(county)\n\npred_counties <- radon %>% filter(county %in% fig_1_counties) %>%\n  mutate(county2 = factor(county, levels = fig_1_counties))\n\ng <- ggplot() + \n  geom_jitter(data = pred_counties, aes(x=basement, y = log_radon, group=county2),height=0, width=0.1) + \n  geom_line(data = county_df_fig_1, aes(x=basement, y=partial_pred, group=county2), linetype=\"solid\", colour=\"gray\") + \n  geom_line(data= county_df_fig_1, aes(x=basement, y = no_pool_pred, group = county2)) + \n    geom_line(data=county_df_fig_1, aes(x=basement, y = pooled_pred, group = county2), linetype=\"dashed\") + \n  facet_wrap(vars(county2), nrow = 2) +\n  xlab(\"basement\") + \n  ylab(\"log radon level\") +\n  theme_bw() + \n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\nplot(g)\n```\n\n::: {.cell-output-display}\n![](radon_example_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Figure 2 \n\n\n::: {.cell hash='radon_example_cache/html/unnamed-chunk-9_0dae4cab21869821748a0d8044955a46'}\n\n```{.r .cell-code}\ndd <- predicted_draws(m2, county_dummy_df) %>% \n  median_qi(.width=0.17) %>%\n  filter(floor == 1)\n\nuranium_coefs <- gather_draws(m2, c(`(Intercept)`, log_uranium)) %>% median_qi()\n\nlog_uranium_range <- seq(min(county_uranium$log_uranium) - .1, max(county_uranium$log_uranium) + .1, by = 0.1)\n\npred_log_radon <- uranium_coefs$.value[1] + uranium_coefs$.value[2]*log_uranium_range\nmedian_radon_pred <- data.frame(log_uranium = log_uranium_range, .prediction = pred_log_radon)\n\n\n\n\n\n\ng <- ggplot(dd) + \n  geom_point(aes(x = log_uranium, y = .prediction, group = county)) +\n  geom_line(data = median_radon_pred, aes(x=log_uranium, y = .prediction)) + \n  geom_errorbar(aes( x= log_uranium, y= .prediction, ymin = .lower, ymax = .upper)) + \n  theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + \n  xlab(\"county-level uranium measure\") + \n  ylab(\"regression intercept\")\n\nplot(g)\n```\n\n::: {.cell-output-display}\n![](radon_example_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}